{
  "openapi": "3.0.0",
  "info": {
    "title": "Bank System App API",
    "description": "API documentation for the bank system app",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "/api/v1",
      "description": "Development server"
    }
  ],
  "tags": [
    {
      "name": "auth",
      "description": "Authentication"
    },
    {
      "name": "user",
      "description": "User management"
    },
    {
      "name": "account",
      "description": "Account management"
    },
    {
      "name": "transaction",
      "description": "Transaction management"
    }
  ],
  "paths": {
    "/register": {
      "post": {
        "summary": "Register a new user",
        "description": "Register a new user",
        "tags": ["auth"],
        "requestBody": {
          "description": "User object that needs to be added to the database",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseUser"
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "summary": "Login user",
        "description": "Login user",
        "tags": ["auth"],
        "requestBody": {
          "description": "User object that needs to be authenticated",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseUser"
                }
              }
            }
          }
        }
      }
    },
    "/authenticate": {
      "get": {
        "summary": "Authenticate user",
        "description": "Authenticate user",
        "tags": ["auth"],
        "security": [
          {
            "authorization": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Get all users",
        "tags": ["user"],
        "description": "Returns a list of all users",
        "security": [
          {
            "authorization": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RequestUser"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new user",
        "description": "Add a new user to the database",
        "tags": ["user"],
        "security": [
          {
            "authorization": []
          }
        ],
        "requestBody": {
          "description": "User object that needs to be added to the database",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseUser"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Get user by id",
        "description": "Returns user by id",
        "tags": ["user"],
        "security": [
          {
            "authorization": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of user to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestUser"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update user by id",
        "description": "Update user by id",
        "tags": ["user"],
        "security": [
          {
            "authorization": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of user to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "User object that needs to be updated in the database",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseUser"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete user by id",
        "description": "Delete user by id",
        "tags": ["user"],
        "security": [
          {
            "authorization": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of user to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestAccount"
                }
              }
            }
          }
        }
      }
    },
    "/accounts": {
      "get": {
        "summary": "Get all accounts",
        "description": "Get all accounts",
        "tags": ["account"],
        "security": [
          {
            "authorization": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseAccount"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new account",
        "description": "Add a new account to the database",
        "tags": ["account"],
        "security": [
          {
            "authorization": []
          }
        ],
        "requestBody": {
          "description": "Account object that needs to be added to the database",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestAccount"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseAccount"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{id}": {
      "get": {
        "summary": "Get all accounts",
        "description": "Get all accounts",
        "tags": ["account"],
        "security": [
          {
            "authorization": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of account to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseAccount"
                }
              }
            }
          }
        }
      }
    },
    "/transactions": {
      "post": {
        "summary": "Add a new transaction",
        "description": "Add a new transaction to the database",
        "tags": ["transaction"],
        "security": [
          {
            "authorization": []
          }
        ],
        "requestBody": {
          "description": "Transaction object that needs to be added to the database",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestTransaction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseTransaction"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get all transactions",
        "description": "Get all transactions",
        "tags": ["transaction"],
        "security": [
          {
            "authorization": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseTransaction"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transactions/{id}": {
      "get": {
        "summary": "Get transaction by id",
        "description": "Returns transaction by id",
        "tags": ["transaction"],
        "security": [
          {
            "authorization": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of transaction to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseTransaction"
                }
              }
            }
          }
        }
      }
    },
    "/deposit": {
      "post": {
        "summary": "melakukan isi saldo bank",
        "description": "User dapat melakukan pengisian saldo pada rekening akun bank",
        "tags": ["account"],
        "security": [
          {
            "authorization": []
          }
        ],
        "requestBody": {
          "description": "Transaction object that needs to be added to the database",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserTransaction"
              }
            }
          }
        }
      }
    },
    "/withdraw": {
      "post": {
        "summary": "melakukan penarikan saldo bank",
        "description": "melakukan penarikan saldo pada rekening akun bank milik pengguna",
        "tags": ["account"],
        "security": [
          {
            "authorization": []
          }
        ],
        "requestBody": {
          "description": "WithDraw object that needs to be added to the database",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserTransaction"
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "authorization": {
        "type": "apiKey",
        "name": "authorization",
        "in": "header"
      }
    },
    "schemas": {
      "RegisterUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "LoginUser": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "RequestUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "profile": {
            "type": "object",
            "format": "json",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "userId": {
                "type": "integer",
                "format": "int64"
              },
              "identity_type": {
                "type": "string"
              },
              "identity_number": {
                "type": "integer",
                "format": "int64"
              },
              "address": {
                "type": "string"
              }
            }
          }
        }
      },
      "ResponseUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "RequestAccount": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "integer",
            "format": "int64"
          },
          "bank_name": {
            "type": "string"
          },
          "bank_account_number": {
            "type": "integer",
            "format": "int64"
          },
          "balance": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "ResponseAccount": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "bank_name": {
            "type": "string"
          },
          "bank_account_number": {
            "type": "integer",
            "format": "int64"
          },
          "balance": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "RequestTransaction": {
        "type": "object",
        "properties": {
          "source_account_id": {
            "type": "integer",
            "format": "int64"
          },
          "destination_account_id": {
            "type": "integer",
            "format": "int64"
          },
          "amount": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "ResponseTransaction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "source_account_id": {
            "type": "integer",
            "format": "int64"
          },
          "destination_account_id": {
            "type": "integer",
            "format": "int64"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UserTransaction": {
        "type": "object",
        "properties": {
          "bank_account_number": {
            "type": "integer",
            "format": "int64"
          },
          "amount": {
            "type": "number",
            "format": "double"
          }
        }
      }
    }
  }
}
